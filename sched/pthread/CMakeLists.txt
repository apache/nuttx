############################################################################
# sched/pthread/Make.defs
#
#   Copyright (C) 2014, 2016 Gregory Nutt. All rights reserved.
#   Author: Gregory Nutt <gnutt@nuttx.org>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name NuttX nor the names of its contributors may be
#    used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
############################################################################

set(CSRCS)

# Include pthread build support

if(NOT "${CONFIG_DISABLE_PTHREAD}" STREQUAL "y")

	list(APPEND CSRCS
		pthread_cancel.c
		pthread_completejoin.c
		pthread_condbroadcast.c
		pthread_condsignal.c
		pthread_condwait.c
		pthread_create.c
		pthread_detach.c
		pthread_exit.c
		pthread_findjoininfo.c
		pthread_getschedparam.c
		pthread_initialize.c
		pthread_join.c
		pthread_mutexdestroy.c
		pthread_mutexinit.c
		pthread_mutextrylock.c
		pthread_mutexunlock.c
		pthread_release.c
		pthread_setschedparam.c
		pthread_setschedprio.c
	)

	if(NOT "${CONFIG_PTHREAD_MUTEX_UNSAFE}" STREQUAL "y")
		list(APPEND CSRCS
			pthread_mutex.c
			pthread_mutexconsistent.c
			pthread_mutexinconsistent.c
		)
	endif()

	if(NOT "${CONFIG_DISABLE_SIGNALS}" STREQUAL "y")
		list(APPEND CSRCS
			pthread_kill.c
			pthread_sigmask.c
		)
	endif()

	if("${CONFIG_SMP}" STREQUAL "y")
		list(APPEND CSRCS
			pthread_setaffinity.c
			pthread_getaffinity.c
		)
	endif()

	if("${CONFIG_PTHREAD_CLEANUP}" STREQUAL "y")
		list(APPEND CSRCS pthread_cleanup.c)
	endif()

endif()

#list(APPEND CSRCS
#	pthread_getspecific.c
#	pthread_keydelete.c
#)
set_parent_srcs(${CSRCS})
