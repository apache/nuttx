############################################################################
# sched/sched/Make.defs
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.  The
# ASF licenses this file to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance with the
# License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
# License for the specific language governing permissions and limitations
# under the License.
#
############################################################################

CSRCS += sched_getfiles.c
CSRCS += sched_addreadytorun.c sched_removereadytorun.c
CSRCS += sched_addprioritized.c sched_mergeprioritized.c sched_mergepending.c
CSRCS += sched_addblocked.c sched_removeblocked.c
CSRCS += sched_gettcb.c sched_verifytcb.c sched_releasetcb.c
CSRCS += sched_getstreams.c
CSRCS += sched_setparam.c sched_setpriority.c sched_getparam.c
CSRCS += sched_setscheduler.c sched_getscheduler.c
CSRCS += sched_yield.c sched_rrgetinterval.c sched_foreach.c
CSRCS += sched_lock.c sched_unlock.c sched_lockcount.c
CSRCS += sched_idletask.c sched_self.c sched_get_stackinfo.c
CSRCS += sched_sysinfo.c

ifeq ($(CONFIG_PRIORITY_INHERITANCE),y)
CSRCS += sched_reprioritize.c
endif

ifeq ($(CONFIG_SMP),y)
CSRCS += sched_cpuselect.c sched_cpupause.c sched_getcpu.c
CSRCS += sched_getaffinity.c sched_setaffinity.c
endif

ifeq ($(CONFIG_SIG_SIGSTOP_ACTION),y)
CSRCS += sched_suspend.c sched_continue.c
endif

ifeq ($(CONFIG_SCHED_WAITPID),y)
CSRCS += sched_waitpid.c
ifeq ($(CONFIG_SCHED_HAVE_PARENT),y)
CSRCS += sched_waitid.c sched_wait.c
endif
endif

ifneq ($(CONFIG_RR_INTERVAL),0)
CSRCS += sched_roundrobin.c
endif

ifeq ($(CONFIG_SCHED_SPORADIC),y)
CSRCS += sched_sporadic.c
endif

ifeq ($(CONFIG_SCHED_SUSPENDSCHEDULER),y)
CSRCS += sched_suspendscheduler.c
endif

ifneq ($(CONFIG_RR_INTERVAL),0)
CSRCS += sched_resumescheduler.c
else ifeq ($(CONFIG_SCHED_RESUMESCHEDULER),y)
CSRCS += sched_resumescheduler.c
endif

ifeq ($(CONFIG_SCHED_CPULOAD),y)
CSRCS += sched_cpuload.c
ifeq ($(CONFIG_CPULOAD_ONESHOT),y)
CSRCS += sched_cpuload_oneshot.c
endif
ifeq ($(CONFIG_CPULOAD_PERIOD),y)
CSRCS += sched_cpuload_period.c
endif
endif

ifeq ($(CONFIG_SCHED_TICKLESS),y)
CSRCS += sched_timerexpiration.c
else
CSRCS += sched_processtimer.c
endif

ifeq ($(CONFIG_SMP),y)
CSRCS += sched_thistask.c
endif

ifeq ($(CONFIG_SCHED_INSTRUMENTATION),y)
ifeq ($(CONFIG_SCHED_INSTRUMENTATION_EXTERNAL),)
CSRCS += sched_note.c
endif
endif

ifeq ($(CONFIG_SCHED_CRITMONITOR),y)
CSRCS += sched_critmonitor.c
endif

ifeq ($(CONFIG_ARCH_HAVE_BACKTRACE),y)
CSRCS += sched_backtrace.c
endif

# Include sched build support

DEPPATH += --dep-path sched
VPATH += :sched
