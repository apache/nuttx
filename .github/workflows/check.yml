# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
name: Check

on:
  pull_request:
    paths-ignore:
      - 'Documentation/**'

jobs:
  check:
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout nuttx repo
        uses: actions/checkout@v2
        with:
          repository: apache/incubator-nuttx
          path: nuttx
          fetch-depth: 0

      - name: Check Pull Request
        run: |
          echo "::add-matcher::nuttx/.github/nxstyle.json"
          cd nuttx
          commits="${{ github.event.pull_request.base.sha }}..HEAD"
          git log --oneline $commits

          # run checkpatch, store result to env. var
          echo "../nuttx/tools/checkpatch.sh -g $commits"
          checkresult=$(../nuttx/tools/checkpatch.sh -g $commits)
          checkstatus=$?
          echo "checkresult=$checkresult" >> $GITHUB_ENV
          echo $checkresult

          # fail or no depending on checkpatch status
          [ "$checkstatus" = "0" ]

      - name: Add comment to PR
        uses: actions/github-script@0.3.0
        if: ${{ failure() && github.event_name == 'pull_request' }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { issue: { number: issue_number }, repo: { owner, repo }  } = context;
            github.issues.createComment({ issue_number, owner, repo,
              body: format('This PR failed the check step. The following problems were found:\n{0}\nFor guidance on NuttX C Coding Standard, follow [this link](https://nuttx.apache.org/docs/latest/contributing/coding_style.html)', env.checkresult) });
