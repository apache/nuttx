#
# For a description of the syntax of this configuration file,
# see the file kconfig-language.txt in the NuttX tools repository.
#

config FS_FAT
	bool "FAT file system"
	default n
	depends on !DISABLE_MOUNTPOINT
	---help---
		Enable FAT filesystem support

if FS_FAT

config FAT_COMPUTE_FSINFO
	bool "FAT compute free space in FSINFO at mount time"
	default n
	---help---
		Enables the computation of free clusters at mount time as suggested by the
		white paper for FAT. The standard behavior of NuttX is to trust the stored
		value and only recompute it once required. This works if the file system
		is never mounted to another OS. SD-cards which are mounted to Windows to
		modify the content might report wrong space after reinserting it to NuttX.
		It is recommended to activate this setting if the "SD-Card" is swapped
		between systems.

config FAT_LCNAMES
	bool "FAT upper/lower names"
	default n
	---help---
		Enable use of the NT-style upper/lower case 8.3
		file name support.

config FAT_LFN
	bool "FAT long file names"
	default n
	---help---
		Enable FAT long file names.  NOTE:  Microsoft claims
		patents on FAT long file name technology.  Please read the
		disclaimer in the top-level NOTICE file and only enable this
		feature if you understand these issues.

config FAT_MAXFNAME
	int "FAT maximum file name size"
	depends on FAT_LFN
	default NAME_MAX
	range 12 255
	---help---
		If FAT_LFN is defined, then the default, maximum long file
		name is 255 bytes.  This can eat up a lot of memory (especially stack
		space).  If you are willing to live with some non-standard, short long
		file names, then define this value to be something more reasonable.  A
		good choice would be the same value as selected for NAME_MAX which will
		limit the visibility of longer file names anyway.

		This setting may not exceed NAME_MAX.  That will be verified at compile
		time.  The minimum values is 12 due to assumptions in internal logic.

config FAT_LFN_ALIAS_HASH
	bool "Use faster method for forming long filename 8.3 alias"
	depends on FAT_LFN
	default n
	---help---
		Long filenames on FAT filesystems have associated 8.3 character alias
		short filenames. The traditional form of these is FILENA~1.EXT with
		a running count of the number of similar names. However creating this
		unique count can take several seconds if there are many similarly named
		files in the directory. Enabling FAT_LFN_ALIAS_HASH uses an alternative
		format of FI0123~1.TXT where the four digits are a hash of the original
		filename. This method is similar to what is used by Windows 2000 and
		later.

config FAT_LFN_UTF8
	bool "Allow UTF8 long filenames"
	depends on FAT_LFN
	default n
	---help---
		UTF8 long filenames are accepted and converted to UCS2.

config FAT_LFN_ALIAS_TRAILCHARS
	int "Number of trailing characters to use for 8.3 alias"
	depends on FAT_LFN
	default 0
	---help---
		Traditional format for long filename 8.3 aliases takes first 6
		characters of long filename. If this option is set to N > 0,
		NuttX will instead take first 6-N and last N characters to form
		the short name. This is useful for filenames like "datafile12.txt"
		where the first characters would always remain the same.

config FS_FATTIME
	bool "FAT timestamps"
	default n
	---help---
		Support FAT date and time. NOTE:  There is not
		much sense in supporting FAT date and time unless you have a
		hardware RTC or other way to get the time and date.

endif # FAT
