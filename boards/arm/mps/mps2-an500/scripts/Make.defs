############################################################################
# boards/arm/mps/mps2-an500/scripts/Make.defs
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.  The
# ASF licenses this file to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance with the
# License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
# License for the specific language governing permissions and limitations
# under the License.
#
############################################################################

include $(TOPDIR)/.config
include $(TOPDIR)/tools/Config.mk
include $(TOPDIR)/arch/arm/src/armv7-m/Toolchain.defs

ifeq ($(CONFIG_ARM_TOOLCHAIN_GHS),y)
  define POSTBUILD
    $(GMEMFILE) nuttx -o nuttx.bin
  endef

  LDSCRIPT = ghs-flash.ld
else
  define POSTBUILD
    $(OBJCOPY) -O binary nuttx nuttx.bin
  endef

  LDSCRIPT = flash.ld
endif

ARCHSCRIPT += $(BOARD_DIR)$(DELIM)scripts$(DELIM)$(LDSCRIPT)

CFLAGS := $(ARCHCFLAGS) $(ARCHOPTIMIZATION) $(ARCHCPUFLAGS) $(ARCHINCLUDES) $(ARCHDEFINES)
ifeq ($(CONFIG_ARM_TOOLCHAIN_GHS),y)
  CFLAGS += $(subst -Wno-cpp,,$(EXTRAFLAGS))
endif
CPICFLAGS = $(ARCHPICFLAGS) $(CFLAGS)
CXXFLAGS := $(ARCHCXXFLAGS) $(ARCHOPTIMIZATION) $(ARCHCPUFLAGS) $(ARCHXXINCLUDES) $(ARCHDEFINES)
ifeq ($(CONFIG_ARM_TOOLCHAIN_GHS),y)
  CXXFLAGS += $(subst -Wno-cpp,,$(EXTRAFLAGS))
endif
CXXPICFLAGS = $(ARCHPICFLAGS) $(CXXFLAGS)
CPPFLAGS := $(ARCHINCLUDES) $(ARCHDEFINES)
ifeq ($(CONFIG_ARM_TOOLCHAIN_GHS),y)
  CPPFLAGS += $(subst -Wno-cpp,,$(EXTRAFLAGS))
else
  CFLAGS   += $(EXTRAFLAGS)
  CPPFLAGS += $(EXTRAFLAGS)
endif
AFLAGS := $(CFLAGS) -D__ASSEMBLY__

# NXFLAT module definitions

NXFLATLDFLAGS1 = -r -d -warn-common
NXFLATLDFLAGS2 = $(NXFLATLDFLAGS1) -T$(TOPDIR)$(DELIM)binfmt$(DELIM)libnxflat$(DELIM)gnu-nxflat-pcrel.ld -no-check-sections
LDNXFLATFLAGS = -e main -s 2048

# ELF module definitions

LDELFFLAGS = -r -e main
LDELFFLAGS += -T $(call CONVERT_PATH,$(TOPDIR)/libs/libc/modlib/gnu-elf.ld)
