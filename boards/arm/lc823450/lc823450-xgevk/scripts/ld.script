/****************************************************************************
 * boards/arm/lc823450/lc823450-xgevk/scripts/ld.script
 *
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.  The
 * ASF licenses this file to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance with the
 * License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations
 * under the License.
 *
 ****************************************************************************/

MEMORY
{
    progmem (rx) : ORIGIN = 0x02040000, LENGTH = 480K
    flash   (rx) : ORIGIN = 0x05008000, LENGTH = 2016K
    sram   (rwx) : ORIGIN = 0x02001000, LENGTH = 124K
}

OUTPUT_ARCH(arm)
EXTERN(_vectors)
ENTRY(_stext)
SECTIONS
{
  .text_spif :
    {
       _sspif = ABSOLUTE(.);
       _espif = ABSOLUTE(.);
    } > flash

  .text :
    {
      _stext = ABSOLUTE(.);
      KEEP(*(.vectors))
      *(.vectors)
      *(.text .text.*)
      *(.fixup)
      *(.gnu.warning)
      *(.rodata .rodata.*)
      *(.gnu.linkonce.t.*)
      *(.glue_7)
      *(.glue_7t)
      *(.got)
      *(.gcc_except_table)
      *(.gnu.linkonce.r.*)
      _etext = ABSOLUTE(.);
    } > progmem

  .init_section : ALIGN(4)
    {
      _sinit = ABSOLUTE(.);
      KEEP(*(.init_array .init_array.*))
      _einit = ABSOLUTE(.);
    } > progmem

  .ARM.extab :
    {
      *(.ARM.extab*)
    } > progmem

  .ARM.exidx : ALIGN(4)
    {
      __exidx_start = ABSOLUTE(.);
      *(.ARM.exidx*)
       __exidx_end = ABSOLUTE(.);
    } > progmem

  _eronly = ABSOLUTE(LOADADDR(.data));

  .data : ALIGN(4)
    {
      _sdata = ABSOLUTE(.);
      *(.data .data.*)
      *(.gnu.linkonce.d.*)
      CONSTRUCTORS
      . = ALIGN(4);
      _edata = ABSOLUTE(.);
    } > sram AT > progmem

  .bss :
    {
      _sbss = ABSOLUTE(.);
      *(.bss .bss.*)
      *(.gnu.linkonce.b.*)
      *(COMMON)
      . = ALIGN(4);
      _ebss = ABSOLUTE(.);
    } > sram

    /* Stabs debugging sections. */
    .stab 0 : { *(.stab) }
    .stabstr 0 : { *(.stabstr) }
    .stab.excl 0 : { *(.stab.excl) }
    .stab.exclstr 0 : { *(.stab.exclstr) }
    .stab.index 0 : { *(.stab.index) }
    .stab.indexstr 0 : { *(.stab.indexstr) }
    .comment 0 : { *(.comment) }
    .debug_abbrev 0 : { *(.debug_abbrev) }
    .debug_info 0 : { *(.debug_info) }
    .debug_line 0 : { *(.debug_line) }
    .debug_pubnames 0 : { *(.debug_pubnames) }
    .debug_aranges 0 : { *(.debug_aranges) }
}
