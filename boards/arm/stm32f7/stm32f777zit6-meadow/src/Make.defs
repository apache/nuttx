############################################################################
# boards/arm/stm32f7/stm32f777zit6-meadow/src/Make.defs
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.  The
# ASF licenses this file to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance with the
# License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
# License for the specific language governing permissions and limitations
# under the License.
#
############################################################################

include $(TOPDIR)/Make.defs


CSRCS = stm32_boot.c stm32_bringup.c stm32_spi.c

ifeq ($(CONFIG_ARCH_LEDS),y)
CSRCS += stm32_autoleds.c
else
CSRCS += stm32_userleds.c
endif

ifeq ($(CONFIG_ARCH_BUTTONS),y)
CSRCS +=  stm32_buttons.c
endif

ifeq ($(CONFIG_BOARDCTL),y)
CSRCS += stm32_appinitialize.c
ifeq ($(CONFIG_BOARDCTL_IOCTL),y)
CSRCS += stm32_ioctl.c
endif
endif

ifeq ($(CONFIG_PWM),y)
CSRCS += stm32_pwm.c
endif

ifeq ($(CONFIG_SPORADIC_INSTRUMENTATION),y)
CSRCS += stm32_sporadic.c
endif

ifeq ($(CONFIG_STM32F7_FMC),y)
CSRCS += stm32_extmem.c
endif

ifeq ($(CONFIG_STM32F7_OTGFS),y)
CSRCS += stm32_usb.c
else ifeq ($(CONFIG_STM32F7_OTGFSHS),y)
CSRCS += stm32_usb.c
endif

ifeq ($(CONFIG_USBMSC),y)
CSRCS += stm32_usbmsc.c
endif

ifeq ($(CONFIG_ARCH_IDLE_CUSTOM),y)
CSRCS += stm32_idle.c
endif

ifeq ($(CONFIG_STM32F7_SDMMC2),y)
CSRCS += stm32_sdmmc.c
endif

ifdef MEADOW_OS

# Enable Meadow.OS build (WORK IN PROGRESS)

MEADOW_OS_DIR=Meadow.OS
CFLAGS += -DMEADOW_OS

ifeq ($(CONFIG_MEADOW_HCOM),y)
CSRCS += $(MEADOW_OS_DIR)/hcom_nx/hcom_nx_upd.c \
$(MEADOW_OS_DIR)/hcom_nx/hcom_nx_startup_mgr.c \
$(MEADOW_OS_DIR)/hcom_nx/hcom_nx_common_utils.c \
$(MEADOW_OS_DIR)/hcom_nx/hcom_nx_bbreg_access.c \
$(MEADOW_OS_DIR)/hcom_nx/hcom_nx_upd_route_cmd.c \
$(MEADOW_OS_DIR)/hcom_nx/hcom_nx_config_manager.c \
$(MEADOW_OS_DIR)/hcom_nx/commands/hcom_nx_ex_flash.c \
$(MEADOW_OS_DIR)/hcom_nx/comms/hcom_nx_host_send.c \
$(MEADOW_OS_DIR)/hcom_nx/create_fs/hcom_nx_fs.c \
$(MEADOW_OS_DIR)/hcom_nx/create_fs/hcom_nx_fs_littlefs.c \
$(MEADOW_OS_DIR)/hcom_nx/diag/hcom_nx_route_text_to_host.c \
$(MEADOW_OS_DIR)/hcom_nx/diag/hcom_nx_trace_msg_proc.c \
$(MEADOW_OS_DIR)/hcom_nx/tests/hcom_nx_qspi_flash_tests.c

ifeq ($(CONFIG_ARCH_IDLE_CUSTOM),y)
CSRCS +=  $(MEADOW_OS_DIR)/misc/meadow_idle_monitor.c
endif

ifeq ($(CONFIG_MEADOW_PWR_MGMT_SUPPORT),y)
CSRCS += $(MEADOW_OS_DIR)/pwrmgmt_calib_lsi_clock.c \
$(MEADOW_OS_DIR)/pwrmgmt_config_wakeup_timer.c \
$(MEADOW_OS_DIR)/pwrmgmt_config_wakeup_alarm.c \
$(MEADOW_OS_DIR)/pwrmgmt_control.c \
$(MEADOW_OS_DIR)/pwrmgmt_enter_stop_mode.c \
$(MEADOW_OS_DIR)/pwrmgmt_misc.c \
$(MEADOW_OS_DIR)/pwrmgmt_switch_rtc_clock.c \
$(MEADOW_OS_DIR)/pwrmgmt_time_support.c
endif

ifeq ($(CONFIG_MEADOW_TIMER_SUPPORT),y)
CSRCS += $(MEADOW_OS_DIR)/timers/timer_manager.c \
$(MEADOW_OS_DIR)/timers/cpu_measure.c \
$(MEADOW_OS_DIR)/timers/pulse_width.c \
$(MEADOW_OS_DIR)/timers/freq_duty.c \
$(MEADOW_OS_DIR)/timers/rc_servo_decode.c \
$(MEADOW_OS_DIR)/timers/lsi_clk_freq_measure.c
endif

CSRCS += $(MEADOW_OS_DIR)/ethernet/meadow_ethnet_start.c \
$(MEADOW_OS_DIR)/ethernet/meadow_ethnet_utils.c \
$(MEADOW_OS_DIR)/ethernet/meadow_ethnet_connect.c \
$(MEADOW_OS_DIR)/ethernet/meadow_ethnet_monitor.c \
$(MEADOW_OS_DIR)/ethernet/meadow_ethnet_dhcp.c \
$(MEADOW_OS_DIR)/ethernet/meadow_ethnet_ping.c

ifeq ($(CONFIG_MEADOW_ESPCP_MANAGER),y)
CSRCS += $(MEADOW_OS_DIR)/espcp/espcp_thread.c \
$(MEADOW_OS_DIR)/espcp/espcp_queue.c \
$(MEADOW_OS_DIR)/espcp/espcp_encoders.c \
$(MEADOW_OS_DIR)/espcp/espcp_message.c \
$(MEADOW_OS_DIR)/espcp/espcp_message_dispatcher.c \
$(MEADOW_OS_DIR)/espcp/generic_list.c \
$(MEADOW_OS_DIR)/espcp/espcp_coprocessor.c \
$(MEADOW_OS_DIR)/espcp/espcp_wifi.c \
$(MEADOW_OS_DIR)/espcp/espcp_system.c \
$(MEADOW_OS_DIR)/espcp/espcp_common.c \
$(MEADOW_OS_DIR)/espcp/espcp_usrsock_sockif.c \
$(MEADOW_OS_DIR)/espcp/espcp_event_handlers.c \
$(MEADOW_OS_DIR)/espcp/espcp_file_system.c
endif

CSRCS += $(MEADOW_OS_DIR)/kerneltests/espcp_tests.c \
$(MEADOW_OS_DIR)/kerneltests/ethernet_tests.c \
$(MEADOW_OS_DIR)/kerneltests/bg77_tests.c \
$(MEADOW_OS_DIR)/kerneltests/network_tests.c \
$(MEADOW_OS_DIR)/kerneltests/sdcard_tests.c \
$(MEADOW_OS_DIR)/kerneltests/power_management_tests.c \
$(MEADOW_OS_DIR)/kerneltests/iso8601_time_tests.c \
$(MEADOW_OS_DIR)/kerneltests/quick_misc_tests.c
#
#	Add the NTP client.
#
CSRCS += $(MEADOW_OS_DIR)/ntpclient/ntpclient.c $(MEADOW_OS_DIR)/misc/long_period_scheduler.c

#
#	Add the Meadow logging system.
#
CSRCS += $(MEADOW_OS_DIR)/misc/meadow_logging.c


#
#	The libyaml library is required by cyaml.
#
CSRCS += $(MEADOW_OS_DIR)/libyaml/api.c $(MEADOW_OS_DIR)/libyaml/dumper.c $(MEADOW_OS_DIR)/libyaml/emitter.c $(MEADOW_OS_DIR)/libyaml/loader.c \
		 $(MEADOW_OS_DIR)/libyaml/parser.c $(MEADOW_OS_DIR)/libyaml/reader.c $(MEADOW_OS_DIR)/libyaml/scanner.c $(MEADOW_OS_DIR)/libyaml//writer.c
#
#	The cyaml library maps the items from the libyaml output to the structures used by the application.
#
CSRCS += $(MEADOW_OS_DIR)/libcyaml/mem.c $(MEADOW_OS_DIR)/libcyaml/free.c $(MEADOW_OS_DIR)/libcyaml/load.c $(MEADOW_OS_DIR)/libcyaml/save.c $(MEADOW_OS_DIR)/libcyaml/util.c $(MEADOW_OS_DIR)/libcyaml/utf8.c

#
#	Add Meadow Cloud support
#
CSRCS += $(MEADOW_OS_DIR)/meadow_cloud/meadow_cloud.c

#
#	Add Meadow OS syscall implementations.
#
CSRCS += $(MEADOW_OS_DIR)/meadow_os/meadow_os_config.c

endif
endif # MEADOW_OS

ifeq ($(CONFIG_BOARD_MEADOW_F7_CORE_COMPUTE),y)
CSRCS += board_corecomp.c
endif

ifeq ($(CONFIG_BOARD_MEADOW_PROJECTLAB),y)
CSRCS += board_projlab.c
endif

DEPPATH += --dep-path board
VPATH += :board
CFLAGS += ${INCDIR_PREFIX}$(TOPDIR)$(DELIM)arch$(DELIM)$(CONFIG_ARCH)$(DELIM)src$(DELIM)board$(DELIM)board
