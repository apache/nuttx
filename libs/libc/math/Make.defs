############################################################################
# libs/libc/math/Make.defs
#
#   Copyright (C) 2012, 2017 Gregory Nutt. All rights reserved.
#   Author: Gregory Nutt <gnutt@nuttx.org>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name NuttX nor the names of its contributors may be
#    used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
############################################################################

ifeq ($(CONFIG_LIBM),y)

# Add the floating point math C files to the build

CSRCS += lib_acosf.c lib_asinf.c lib_atan2f.c lib_atanf.c lib_cosf.c
CSRCS += lib_coshf.c  lib_expf.c lib_fabsf.c lib_fmodf.c lib_frexpf.c
CSRCS += lib_ldexpf.c lib_logf.c lib_log10f.c lib_log2f.c lib_modff.c
CSRCS += lib_powf.c lib_sinf.c lib_sinhf.c lib_sqrtf.c lib_tanf.c
CSRCS += lib_tanhf.c lib_asinhf.c lib_acoshf.c lib_atanhf.c lib_erff.c
CSRCS += lib_copysignf.c

CSRCS += lib_acos.c lib_asin.c lib_atan.c lib_atan2.c lib_cos.c
CSRCS += lib_cosh.c lib_exp.c lib_fabs.c lib_fmod.c lib_frexp.c
CSRCS += lib_ldexp.c lib_log.c lib_log10.c lib_log2.c lib_modf.c
CSRCS += lib_pow.c lib_sin.c lib_sinh.c lib_sqrt.c lib_tan.c
CSRCS += lib_tanh.c lib_asinh.c lib_acosh.c lib_atanh.c lib_erf.c
CSRCS += lib_copysign.c lib_cbrt.c

CSRCS += lib_acosl.c lib_asinl.c lib_atan2l.c lib_atanl.c lib_ceill.c
CSRCS += lib_cosl.c lib_coshl.c lib_expl.c lib_fabsl.c lib_floorl.c
CSRCS += lib_fmodl.c lib_frexpl.c lib_ldexpl.c lib_logl.c lib_log10l.c
CSRCS += lib_log2l.c lib_modfl.c lib_powl.c lib_rintl.c lib_roundl.c
CSRCS += lib_sinl.c lib_sinhl.c lib_sqrtl.c lib_tanl.c lib_tanhl.c
CSRCS += lib_asinhl.c lib_acoshl.c lib_atanhl.c lib_erfl.c lib_copysignl.c
CSRCS += lib_truncl.c

CSRCS += lib_libexpi.c lib_libsqrtapprox.c
CSRCS += lib_libexpif.c

CSRCS += lib_erfc.c lib_erfcf.c lib_erfcl.c
CSRCS += lib_expm1.c lib_expm1f.c lib_expm1l.c
CSRCS += lib_lround.c lib_lroundf.c lib_lroundl.c
CSRCS += lib_llround.c lib_llroundf.c lib_llroundl.c
CSRCS += lib_nan.c lib_nanf.c lib_nanl.c

CSRCS += __cos.c __sin.c lib_gamma.c lib_lgamma.c

# Use the C versions of some functions only if architecture specific
# optimized versions are not provided.

ifneq ($(LIBM_ARCH_CEIL),y)
CSRCS += lib_ceil.c
endif

ifneq ($(LIBM_ARCH_FLOOR),y)
CSRCS += lib_floor.c
endif

ifneq ($(LIBM_ARCH_RINT),y)
CSRCS += lib_rint.c
endif

ifneq ($(LIBM_ARCH_ROUND),y)
CSRCS += lib_round.c
endif

ifneq ($(LIBM_ARCH_TRUNC),y)
CSRCS += lib_trunc.c
endif

ifneq ($(LIBM_ARCH_CEILF),y)
CSRCS += lib_ceilf.c
endif

ifneq ($(LIBM_ARCH_FLOORF),y)
CSRCS += lib_floorf.c
endif

ifneq ($(LIBM_ARCH_RINTF),y)
CSRCS += lib_rintf.c
endif

ifneq ($(LIBM_ARCH_ROUNDF),y)
CSRCS += lib_roundf.c
endif

ifneq ($(LIBM_ARCH_TRUNCF),y)
CSRCS += lib_truncf.c
endif

# Add the floating point math directory to the build

DEPPATH += --dep-path math
VPATH += :math

endif
