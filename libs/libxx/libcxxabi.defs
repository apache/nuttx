############################################################################
# libs/libxx/libcxxabi.defs
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.  The
# ASF licenses this file to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance with the
# License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
# License for the specific language governing permissions and limitations
# under the License.
#
###########################################################################

LIBCXXABI_VERSION=12.0.0

libcxxabi-$(LIBCXXABI_VERSION).src.tar.xz:
	$(Q) curl -O -L https://github.com/llvm/llvm-project/releases/download/llvmorg-$(LIBCXXABI_VERSION)/libcxxabi-$(LIBCXXABI_VERSION).src.tar.xz

libcxxabi: libcxxabi-$(LIBCXXABI_VERSION).src.tar.xz
	$(Q) tar -xf libcxxabi-$(LIBCXXABI_VERSION).src.tar.xz
	$(Q) mv libcxxabi-$(LIBCXXABI_VERSION).src libcxxabi
	$(Q) patch -p0 < 0001-libc-abi-avoid-the-waring-__EXCEPTIONS-is-not-define.patch
	$(Q) touch $@

distclean::
	$(Q) $(DELFILE) libcxxabi-$(LIBCXXABI_VERSION).src.tar.xz
	$(call DELDIR, libcxxabi)

context:: libcxxabi

ifeq ($(CONFIG_LIBCXXABI), y)
CXXFLAGS += ${shell $(DEFINE) "$(CC)" LIBCXX_BUILDING_LIBCXXABI}
CXXFLAGS += -I $(TOPDIR)/libs/libxx/libcxxabi/include
endif

# C++ABI files
CPPSRCS += cxa_aux_runtime.cpp cxa_default_handlers.cpp cxa_demangle.cpp cxa_exception_storage.cpp
CPPSRCS += cxa_guard.cpp cxa_handlers.cpp cxa_thread_atexit.cpp cxa_vector.cpp cxa_virtual.cpp
# C++ STL files
CPPSRCS += stdlib_exception.cpp stdlib_new_delete.cpp stdlib_stdexcept.cpp stdlib_typeinfo.cpp
# Internal files
CPPSRCS += abort_message.cpp fallback_malloc.cpp private_typeinfo.cpp

ifeq ($(CONFIG_CXX_EXCEPTION), y)
CXXFLAGS += ${shell $(DEFINE) "$(CC)" LIBCXXABI_ENABLE_EXCEPTIONS}
CPPSRCS += cxa_exception.cpp cxa_personality.cpp
else
CPPSRCS += cxa_noexception.cpp
endif

# RTTI is required for building the libcxxabi library
CXXFLAGS += -frtti

DEPPATH += --dep-path libcxxabi/src
VPATH += libcxxabi/src

