############################################################################
# drivers/analog/Make.defs
#
#   Copyright (C) 2011-2012, 2017 Gregory Nutt. All rights reserved.
#   Author: Gregory Nutt <gnutt@nuttx.org>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name NuttX nor the names of its contributors may be
#    used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
############################################################################

# Don't build anything if there is no support for analog devices

# Check for DAC devices

ifeq ($(CONFIG_DAC),y)

# Include the common DAC character driver

CSRCS += dac.c

# Include DAC device drivers

ifeq ($(CONFIG_DAC_AD5410),y)
  CSRCS += ad5410.c
endif

ifeq ($(CONFIG_DAC7571),y)
  CSRCS += dac7571.c
endif

ifeq ($(CONFIG_DAC7554),y)
  CSRCS += dac7554.c
endif

endif

# Check for COMP devices

ifeq ($(CONFIG_COMP),y)

# Include the common COMP character driver

CSRCS += comp.c

endif

# Check for OPAMP devices

ifeq ($(CONFIG_OPAMP),y)

# Include the common OPAMP character driver

CSRCS += opamp.c

endif

# Check for ADC devices

ifeq ($(CONFIG_ADC),y)

# Include the common ADC character driver

CSRCS += adc.c

# Amplifiers/multiplexers

ifeq ($(CONFIG_ADC_PGA11X),y)
  CSRCS += pga11x.c
endif

# Include ADC device drivers

ifeq ($(CONFIG_ADC_ADS1242),y)
  CSRCS += ads1242.c
endif

ifeq ($(CONFIG_ADC_ADS125X),y)
  CSRCS += ads1255.c
endif

ifeq ($(CONFIG_ADC_ADS7828),y)
  CSRCS += ads7828.c
endif

ifeq ($(CONFIG_ADC_LTC1867L),y)
  CSRCS += ltc1867l.c
endif
endif

ifeq ($(CONFIG_LMP92001),y)
  CSRCS += lmp92001.c
endif

# Add analog driver build support (the nested if-then-else implements an OR)

ifeq ($(CONFIG_DAC),y)
  DEPPATH += --dep-path analog
  VPATH += :analog
  CFLAGS += ${shell $(INCDIR) "$(CC)" $(TOPDIR)$(DELIM)drivers$(DELIM)analog}
else
ifeq ($(CONFIG_ADC),y)
  DEPPATH += --dep-path analog
  VPATH += :analog
  CFLAGS += ${shell $(INCDIR) "$(CC)" $(TOPDIR)$(DELIM)drivers$(DELIM)analog}
else
ifeq ($(CONFIG_COMP),y)
  DEPPATH += --dep-path analog
  VPATH += :analog
  CFLAGS += ${shell $(INCDIR) "$(CC)" $(TOPDIR)$(DELIM)drivers$(DELIM)analog}
else
ifeq ($(CONFIG_OPAMP),y)
  DEPPATH += --dep-path analog
  VPATH += :analog
  CFLAGS += ${shell $(INCDIR) "$(CC)" $(TOPDIR)$(DELIM)drivers$(DELIM)analog}
endif
endif
endif
endif
