############################################################################
# arch/mips/src/pic32mz/Make.defs
#
#   Copyright (C) 2015, 2018, 2019 Gregory Nutt. All rights reserved.
#   Author: Gregory Nutt <gnutt@nuttx.org>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name NuttX nor the names of its contributors may be
#    used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
############################################################################

# The start-up, "head", file

HEAD_ASRC = pic32mz_head.S

# Common MIPS files

CMN_ASRCS  = mips_syscall0.S vfork.S mips_cache.S
CMN_CSRCS  = mips_allocateheap.c mips_assert.c mips_blocktask.c mips_copystate.c
CMN_CSRCS += mips_createstack.c mips_doirq.c mips_exit.c mips_initialize.c
CMN_CSRCS += mips_initialstate.c mips_interruptcontext.c mips_irq.c mips_lowputs.c
CMN_CSRCS += mips_mdelay.c mips_modifyreg8.c mips_modifyreg16.c mips_modifyreg32.c
CMN_CSRCS += mips_puts.c mips_releasepending.c mips_releasestack.c
CMN_CSRCS += mips_reprioritizertr.c mips_schedulesigaction.c mips_sigdeliver.c
CMN_CSRCS += mips_stackframe.c mips_swint0.c mips_udelay.c mips_unblocktask.c
CMN_CSRCS += mips_usestack.c mips_vfork.c

# Configuration dependent common files

ifneq ($(CONFIG_ARCH_IDLE_CUSTOM),y)
CMN_CSRCS += mips_idle.c
endif

# Use of common/mips_etherstub.c is deprecated.  The preferred mechanism is to
# use CONFIG_NETDEV_LATEINIT=y to suppress the call to up_netinitialize() in
# up_initialize().  Then this stub would not be needed.

ifneq ($(CONFIG_PIC32MZ_ETHERNET),y)
ifeq ($(CONFIG_NET),y)
CMN_CSRCS += mips_etherstub.c
endif
endif

ifeq ($(CONFIG_ARCH_STACKDUMP),y)
CMN_CSRCS += mips_dumpstate.c
endif

# Required PIC32MZ files

CHIP_CSRCS  = pic32mz_lowinit.c pic32mz_exception.c pic32mz_decodeirq.c
CHIP_CSRCS += pic32mz_irq.c pic32mz_timerisr.c pic32mz_gpio.c
CHIP_CSRCS += pic32mz_lowconsole.c pic32mz_serial.c

# Configuration-dependent PIC32MZ files

ifeq ($(CONFIG_PIC32MZ_GPIOIRQ),y)
CHIP_CSRCS += pic32mz_gpioirq.c
endif

ifeq ($(CONFIG_PIC32MZ_SPI),y)
CHIP_CSRCS += pic32mz_spi.c
endif

ifeq ($(CONFIG_PIC32MZ_I2C),y)
CHIP_CSRCS += pic32mz_i2c.c
endif

ifeq ($(CONFIG_PIC32MZ_TIMER),y)
CHIP_CSRCS += pic32mz_timer.c
ifeq ($(CONFIG_TIMER),y)
CHIP_CSRCS += pic32mz_timer_lowerhalf.c
endif
endif

ifeq ($(CONFIG_PIC32MZ_FREERUN),y)
CHIP_CSRCS += pic32mz_freerun.c
endif

ifeq ($(CONFIG_PIC32MZ_ONESHOT),y)
CHIP_CSRCS += pic32mz_oneshot.c
ifeq ($(CONFIG_ONESHOT),y)
CHIP_CSRCS += pic32mz_oneshot_lowerhalf.c
endif
endif

ifeq ($(CONFIG_PIC32MZ_ETHERNET),y)
CHIP_CSRCS += pic32mz_ethernet.c
endif

ifeq ($(CONFIG_PIC32MZ_DMA),y)
CHIP_CSRCS += pic32mz_dma.c
endif
