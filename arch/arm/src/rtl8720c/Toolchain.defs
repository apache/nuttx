############################################################################
# arch/arm/src/rtl8720c/Toolchain.defs
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.  The
# ASF licenses this file to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance with the
# License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
# License for the specific language governing permissions and limitations
# under the License.
#
############################################################################

ifeq ($(CONFIG_CYGWIN_WINTOOL),y)
  ARCHSCRIPT = -T "${shell cygpath -w $(LDSCRIPT)}"
else
  ARCHSCRIPT = -T$(LDSCRIPT)
endif

include ${TOPDIR}/arch/arm/src/armv8-m/Toolchain.defs

LD = $(CROSSDEV)gcc

ARCHOPTIMIZATION =
ifeq ($(CONFIG_DEBUG_SYMBOLS),y)
  ARCHOPTIMIZATION = -g
endif

# enable precise stack overflow tracking
ifeq ($(CONFIG_ARMV8M_STACKCHECK),y)
  INSTRUMENTATIONDEFINES += -finstrument-functions -ffixed-r10
endif

ifeq ($(CONFIG_STACK_CANARIES),y)
  ARCHOPTIMIZATION += -fstack-protector-all
endif

ifneq ($(CONFIG_DEBUG_NOOPT),y)
  ARCHOPTIMIZATION += $(MAXOPTIMIZATION) -fno-strict-aliasing -fno-strength-reduce -fomit-frame-pointer
  ARCHOPTIMIZATION += -ffunction-sections -fdata-sections
ifneq ($(CONFIG_ARMV8M_STACKCHECK),y)
  #ARCHOPTIMIZATION += -flto -fuse-linker-plugin
endif
endif

ARCHCFLAGS = -fno-builtin -march=armv8-m.main+dsp -mthumb -mfloat-abi=soft -D__thumb2__ -g -gdwarf-3 -Os  -fno-tree-scev-cprop
ARCHCXXFLAGS = -fno-builtin -nostdinc++ -std=c++11
ifneq ($(CONFIG_CXX_EXCEPTION),y)
  ARCHCXXFLAGS += -fno-exceptions -fcheck-new -fno-rtti
endif
ARCHWARNINGS = -Wall -Wstrict-prototypes -Wshadow -Wundef
ARCHWARNINGSXX = -Wall -Wshadow -Wundef

CFLAGS := $(ARCHCFLAGS) $(ARCHWARNINGS) $(ARCHOPTIMIZATION) $(ARCHCPUFLAGS) $(ARCHINCLUDES) $(ARCHDEFINES) $(EXTRAFLAGS) -pipe
CFLAGS += -I$(TOPDIR)/arch/$(CONFIG_ARCH)/src/rtl8720c
CXXFLAGS := $(ARCHCXXFLAGS) $(ARCHWARNINGSXX) $(ARCHOPTIMIZATION) $(ARCHCPUFLAGS) $(ARCHXXINCLUDES) $(ARCHDEFINES) $(EXTRAFLAGS) -pipe
CPPFLAGS := $(ARCHINCLUDES) $(ARCHDEFINES) $(EXTRAFLAGS)
AFLAGS := $(CFLAGS) -D__ASSEMBLY__

# ELF module definitions

CELFFLAGS = $(CFLAGS) -mlong-calls -fno-common
CXXELFFLAGS = $(CXXFLAGS) -mlong-calls -fno-common
AELFFLAGS = $(AFLAGS)
LDELFFLAGS = -r -e main -Bstatic $(LDFLAGS)
LDELFFLAGS += -T $(TOPDIR)/binfmt/libelf/gnu-elf.ld

# Loadable module definitions

CMODULEFLAGS = $(CFLAGS) -mlong-calls -fno-common

LDMODULEFLAGS = -r -e module_initialize $(LDFLAGS)
ifeq ($(WINTOOL),y)
  LDMODULEFLAGS += -T "${shell cygpath -w $(TOPDIR)/libs/libc/modlib/gnu-elf.ld}"
else
  LDMODULEFLAGS += -T $(TOPDIR)/libs/libc/modlib/gnu-elf.ld
endif

LDSTARTGROUP = -Wl,--start-group
LDENDGROUP   = -Wl,--end-group

ifeq ($(filter -nuttx-, $(CROSSDEV)),)
  LDFLAGS += -nostartfiles -nodefaultlibs
endif
ifeq ($(CONFIG_DEBUG_SYMBOLS),y)
  LDFLAGS += -g
endif

ifneq ($(CONFIG_DEBUG_NOOPT),y)
  LDFLAGS += -Wl,--gc-sections
endif

LDFLAGS += -Wl,--defsym,netif_is_valid_IP=netif_is_valid_ip
LDFLAGS += -Wl,--defsym,rtw_timerCreate=rtw_timer_create
LDFLAGS += -Wl,--defsym,rtw_timerStop=rtw_timer_stop
LDFLAGS += -Wl,--defsym,rtw_timerDelete=rtw_timer_delete
LDFLAGS += -Wl,--defsym,rtw_timerIsTimerActive=rtw_timer_is_timer_active
LDFLAGS += -Wl,--defsym,rtw_timerChangePeriod=rtw_timer_change_period
LDFLAGS += -Wl,--defsym,rtw_timerGetID=rtw_timer_get_id
LDFLAGS += -Wl,--defsym,rtw_timerStart=rtw_timer_start
LDFLAGS += -Wl,--defsym,rtw_timerStartFromISR=rtw_timer_start_from_isr
LDFLAGS += -Wl,--defsym,rtw_timerStopFromISR=rtw_timer_stop_from_isr
LDFLAGS += -Wl,--defsym,rtw_timerResetFromISR=rtw_timer_reset_from_isr
LDFLAGS += -Wl,--defsym,rtw_timerChangePeriodFromISR=rtw_timer_change_period_from_isr
LDFLAGS += -Wl,--defsym,rtw_timerReset=rtw_timer_reset
LDFLAGS += -Wl,--defsym,rtw_getFreeHeapSize=rtw_get_free_heap_size
LDFLAGS += -Wl,--defsym,xTaskGetSchedulerState=xtask_get_scheduler_state
LDFLAGS += -Wl,--defsym,xTaskGetTickCount=xtask_get_tick_count
LDFLAGS += -Wl,--defsym,pcTaskGetName=pctask_get_name

LDFLAGS += -Wl,--defsym,aesccmp_construct_mic_iv=aesccmp_construct_mic_iv_ram
LDFLAGS += -Wl,--defsym,aesccmp_construct_mic_header1=aesccmp_construct_mic_header1_ram
LDFLAGS += -Wl,--defsym,aesccmp_construct_ctr_preload=aesccmp_construct_ctr_preload_ram
LDFLAGS += -Wl,--defsym,rom_psk_CalcGTK=ram_patch_rom_psk_CalcGTK
LDFLAGS += -Wl,--defsym,rom_psk_CalcPTK=ram_patch_rom_psk_CalcPTK
LDFLAGS += -Wl,--defsym,aes_80211_encrypt=ram_patch_aes_80211_encrypt
LDFLAGS += -Wl,--defsym,aes_80211_decrypt=ram_patch_aes_80211_decrypt

EXTRA_LIBS += -l_soc_is
ifeq ($(CONFIG_WPA3_SUPPORT),y)
EXTRA_LIBS += -l_wlan_wpa3
else
EXTRA_LIBS += -l_wlan
endif
