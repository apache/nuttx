############################################################################
# arch/arm/src/armv7-m/Toolchain.defs
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.  The
# ASF licenses this file to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance with the
# License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
# License for the specific language governing permissions and limitations
# under the License.
#
############################################################################

# Parametrization for ARCHCPUFLAGS

ifeq ($(CONFIG_ARCH_CORTEXM4),y)
  TOOLCHAIN_ARM7EM   := y
  TOOLCHAIN_MTUNE    := -mtune=cortex-m4
  TOOLCHAIN_MARCH    := -march=armv7e-m
  LLVM_CPUTYPE       := cortex-m4
  ifeq ($(CONFIG_ARCH_FPU),y)
    TOOLCHAIN_MFLOAT := -mfpu=fpv4-sp-d16
  endif
else ifeq ($(CONFIG_ARCH_CORTEXM7),y)
  TOOLCHAIN_ARM7EM   := y
  TOOLCHAIN_MTUNE    := -mtune=cortex-m7
  TOOLCHAIN_MARCH    := -march=armv7e-m
  LLVM_CPUTYPE       := cortex-m7
  ifeq ($(CONFIG_ARCH_FPU),y)
    ifeq ($(CONFIG_ARCH_DPFPU),y)
      TOOLCHAIN_MFLOAT := -mfpu=fpv5-d16
    else
      TOOLCHAIN_MFLOAT := -mfpu=fpv5-sp-d16
    endif
  endif
else # ifeq ($(CONFIG_ARCH_CORTEXM3),y)
  TOOLCHAIN_ARM7EM   := n
  TOOLCHAIN_MTUNE    := -mtune=cortex-m3
  TOOLCHAIN_MARCH    := -march=armv7-m
  TOOLCHAIN_MFLOAT   := -mfloat-abi=soft
  LLVM_CPUTYPE       := cortex-m3
endif

ifeq ($(CONFIG_ARCH_FPU),y)
  LLVM_ABITYPE := eabihf
  ifeq ($(CONFIG_ARM_FPU_ABI_SOFT),y)
    TOOLCHAIN_MFLOAT += -mfloat-abi=softfp
  else
    TOOLCHAIN_MFLOAT += -mfloat-abi=hard
  endif
else
  LLVM_ABITYPE 		 := eabi
  TOOLCHAIN_MFLOAT += -mfloat-abi=soft
endif

ifeq ($(CONFIG_ARCH_CORTEXM3),y)
  LLVM_ARCHTYPE := thumbv7m
else
  LLVM_ARCHTYPE := thumbv7em
endif

# Clang Configuration files

ifeq ($(CONFIG_ARM_TOOLCHAIN_CLANG),y)

  ifeq ($(CONFIG_ARCH_CORTEXM4),y)
    ifeq ($(CONFIG_ARCH_FPU),y)
      TOOLCHAIN_MARCH += --config armv7em_hard_fpv4_sp_d16_nosys
    else
      TOOLCHAIN_MARCH += --config armv7em_soft_nofp_nosys
    endif
  else ifeq ($(CONFIG_ARCH_CORTEXM7),y)
    ifeq ($(CONFIG_ARCH_FPU),y)
      TOOLCHAIN_MARCH += --config armv7em_hard_fpv5_d16_nosys
    else
      TOOLCHAIN_MARCH += --config armv7em_soft_nofp_nosys
    endif
  else # ifeq ($(CONFIG_ARCH_CORTEXM3),y)
      TOOLCHAIN_MARCH += --config armv7m_soft_nofp_nosys
  endif

else ifeq ($(CONFIG_ARM_TOOLCHAIN_ARMCLANG),y)

  ifeq ($(CONFIG_ARCH_CORTEXM4),y)
    ifeq ($(CONFIG_ARCH_FPU),y)
      LDFLAGS += --cpu=Cortex-M4
    else
      LDFLAGS += --cpu=Cortex-M4.no_fp
    endif
  else ifeq ($(CONFIG_ARCH_CORTEXM7),y)
    ifeq ($(CONFIG_ARCH_FPU),y)
      ifeq ($(CONFIG_ARCH_DPFPU),y)
        LDFLAGS += --cpu=Cortex-M7
      else
        LDFLAGS += --cpu=Cortex-M7.fp.sp
      endif
    else
      LDFLAGS += --cpu=Cortex-M7.no_fp
    endif
  else # ifeq ($(CONFIG_ARCH_CORTEXM3),y)
    LDFLAGS += --cpu=Cortex-M3
  endif

endif

ifeq ($(CONFIG_ARMV7M_STACKCHECK),y)
  ARCHOPTIMIZATION += -finstrument-functions -ffixed-r10
endif

include $(TOPDIR)/arch/arm/src/common/Toolchain.defs
