############################################################################
# arch/risc-v/src/esp32c3/Make.defs
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.  The
# ASF licenses this file to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance with the
# License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
# License for the specific language governing permissions and limitations
# under the License.
#
############################################################################

include chip/Bootloader.mk

# Specify our HEAD assembly file.  This will be linked as
# the first object file, so it will appear at address 0

HEAD_ASRC = esp32c3_head.S

CHIP_ASRCS = esp32c3_vectors.S esp32c3_interrupt.S

# Specify C code within the common directory to be included

CMN_CSRCS += riscv_initialize.c riscv_swint.c
CMN_CSRCS += riscv_allocateheap.c riscv_createstack.c riscv_exit.c riscv_exception.c
CMN_CSRCS += riscv_assert.c riscv_blocktask.c riscv_copystate.c riscv_initialstate.c
CMN_CSRCS += riscv_interruptcontext.c riscv_modifyreg32.c riscv_puts.c riscv_mdelay.c
CMN_CSRCS += riscv_releasepending.c riscv_reprioritizertr.c riscv_copyfullstate.c
CMN_CSRCS += riscv_releasestack.c riscv_stackframe.c riscv_schedulesigaction.c
CMN_CSRCS += riscv_sigdeliver.c riscv_udelay.c riscv_unblocktask.c riscv_usestack.c
CMN_CSRCS += riscv_tcbinfo.c

ifeq ($(CONFIG_SCHED_BACKTRACE),y)
CMN_CSRCS += riscv_backtrace.c
endif

ifeq ($(CONFIG_STACK_COLORATION),y)
CMN_CSRCS += riscv_checkstack.c
endif

ifeq ($(CONFIG_ARCH_HAVE_VFORK),y)
CMN_CSRCS  += riscv_vfork.c
endif

# Specify our C code within this directory to be included

CHIP_CSRCS  = esp32c3_allocateheap.c esp32c3_start.c esp32c3_wdt.c esp32c3_idle.c
CHIP_CSRCS += esp32c3_irq.c
CHIP_CSRCS += esp32c3_clockconfig.c esp32c3_gpio.c
CHIP_CSRCS += esp32c3_lowputc.c esp32c3_serial.c
CHIP_CSRCS += esp32c3_systemreset.c esp32c3_resetcause.c
CHIP_CSRCS += esp32c3_uid.c

ifeq ($(CONFIG_SCHED_TICKLESS),y)
CHIP_CSRCS += esp32c3_tickless.c
else
CHIP_CSRCS += esp32c3_timerisr.c
endif

ifeq ($(CONFIG_ESP32C3_USBSERIAL),y)
CHIP_CSRCS += esp32c3_usbserial.c
endif

ifeq ($(CONFIG_ESP32C3_RNG),y)
CHIP_CSRCS += esp32c3_rng.c
endif

ifeq ($(CONFIG_ESP32C3_I2C),y)
CHIP_CSRCS += esp32c3_i2c.c
endif

ifeq ($(CONFIG_ESP32C3_SPI),y)
CHIP_CSRCS += esp32c3_spi.c
  ifeq ($(CONFIG_SPI_SLAVE),y)
    CHIP_CSRCS += esp32c3_spi_slave.c
  endif
endif

ifeq ($(CONFIG_ESP32C3_SPIFLASH),y)
CHIP_CSRCS += esp32c3_spiflash.c
  ifeq ($(CONFIG_ESP32C3_MTD),y)
    CHIP_CSRCS += esp32c3_spiflash_mtd.c
  endif
endif

ifeq ($(CONFIG_ESP32C3_PARTITION_TABLE),y)
CHIP_CSRCS += esp32c3_partition.c
endif

ifeq ($(CONFIG_WATCHDOG),y)
CHIP_CSRCS += esp32c3_wdt_lowerhalf.c
endif

ifeq ($(CONFIG_ESP32C3_TIMER),y)
CHIP_CSRCS += esp32c3_tim.c
ifeq ($(CONFIG_TIMER),y)
CHIP_CSRCS += esp32c3_tim_lowerhalf.c
endif
endif

ifeq ($(CONFIG_ESP32C3_ONESHOT),y)
CHIP_CSRCS += esp32c3_oneshot.c
ifeq ($(CONFIG_ONESHOT),y)
CHIP_CSRCS += esp32c3_oneshot_lowerhalf.c
endif
endif

ifeq ($(CONFIG_ESP32C3_RT_TIMER),y)
CHIP_CSRCS += esp32c3_rt_timer.c
endif

ifeq ($(CONFIG_ESP32C3_BIGNUM_ACCELERATOR),y)
CHIP_CSRCS += esp32c3_bignum.c
endif

ifeq ($(CONFIG_ESP32C3_RSA_ACCELERATOR),y)
CHIP_CSRCS += esp32c3_rsa.c
endif

ifeq ($(CONFIG_ESP32C3_SHA_ACCELERATOR),y)
CHIP_CSRCS += esp32c3_sha.c
endif

ifeq ($(CONFIG_ESP32C3_FREERUN),y)
CHIP_CSRCS += esp32c3_freerun.c
endif

ifeq ($(CONFIG_ESP32C3_DMA),y)
CHIP_CSRCS += esp32c3_dma.c
endif

ifeq ($(CONFIG_PM),y)
ifneq ($(CONFIG_ARCH_CUSTOM_PMINIT),y)
CHIP_CSRCS += esp32c3_pminitialize.c
endif
CHIP_CSRCS += esp32c3_pm.c
endif

CHIP_CSRCS += esp32c3_rtc.c

ifeq ($(CONFIG_ESP32C3_LEDC),y)
CHIP_CSRCS += esp32c3_ledc.c
endif

ifeq ($(CONFIG_ESP32C3_ADC),y)
CHIP_CSRCS += esp32c3_adc.c
endif

ifeq ($(CONFIG_ESP32C3_AES_ACCELERATOR),y)
CHIP_CSRCS += esp32c3_aes.c
endif

ifeq ($(CONFIG_ESP32C3_EFUSE),y)
CHIP_CSRCS += esp32c3_efuse.c
CHIP_CSRCS += esp32c3_efuse_table.c
CHIP_CSRCS += esp32c3_efuse_lowerhalf.c
endif

ifeq ($(CONFIG_ARCH_HAVE_EXTRA_HEAPS),y)
CHIP_CSRCS += esp32c3_extraheaps.c
endif

ifeq ($(CONFIG_ARCH_USE_TEXT_HEAP),y)
CHIP_CSRCS += esp32c3_textheap.c
endif

ifeq ($(CONFIG_RTC_DRIVER),y)
CHIP_CSRCS += esp32c3_rtc_lowerhalf.c
endif

ifeq ($(CONFIG_ESP32C3_RTC_HEAP),y)
CHIP_CSRCS += esp32c3_rtcheap.c
endif

ifeq ($(CONFIG_ESP32C3_BROWNOUT_DET),y)
CHIP_CSRCS += esp32c3_brownout.c
endif

ifeq ($(CONFIG_ESP32C3_WIRELESS),y)
WIRELESS_DRV_UNPACK = esp-wireless-drivers-3rdparty
WIRELESS_DRV_ID     = 45701c0
WIRELESS_DRV_ZIP    = $(WIRELESS_DRV_ID).zip
WIRELESS_DRV_URL    = https://github.com/espressif/esp-wireless-drivers-3rdparty/archive

$(WIRELESS_DRV_ZIP):
	$(Q) echo "Downloading: ESP Wireless Drivers"
	$(Q) curl -L $(WIRELESS_DRV_URL)/$(WIRELESS_DRV_ZIP) -o chip/$(WIRELESS_DRV_ZIP)

chip/$(WIRELESS_DRV_UNPACK): $(WIRELESS_DRV_ZIP)
	$(Q) echo "Unpacking: ESP Wireless Drivers"
	$(Q) unzip -oqq chip/$(WIRELESS_DRV_ZIP) -d chip/
	$(Q) mv chip/$(WIRELESS_DRV_UNPACK)-$(WIRELESS_DRV_ID)* chip/$(WIRELESS_DRV_UNPACK)
	$(Q) touch chip/$(WIRELESS_DRV_UNPACK)

context:: chip/$(WIRELESS_DRV_UNPACK)

distclean::
	$(call DELFILE, chip/$(WIRELESS_DRV_ZIP))
	$(call DELDIR, chip/$(WIRELESS_DRV_UNPACK))

INCLUDES += $(shell $(INCDIR) "$(CC)" $(ARCH_SRCDIR)$(DELIM)chip$(DELIM)esp-wireless-drivers-3rdparty$(DELIM)include)
INCLUDES += $(shell $(INCDIR) "$(CC)" $(ARCH_SRCDIR)$(DELIM)chip$(DELIM)esp-wireless-drivers-3rdparty$(DELIM)include$(DELIM)esp32c3)

EXTRA_LIBPATHS += -L $(ARCH_SRCDIR)$(DELIM)chip$(DELIM)esp-wireless-drivers-3rdparty$(DELIM)libs$(DELIM)esp32c3
EXTRA_LIBS += -lphy

# Due to some Wi-Fi related libraries, the option is need to avoid linking too much
# unused functions.

LDFLAGS += --gc-sections

# Wireless interfaces.

CHIP_CSRCS += esp32c3_wireless.c
endif

ifeq ($(CONFIG_ESP32C3_WIFI),y)
CHIP_CSRCS += esp32c3_wlan.c esp32c3_wifi_utils.c esp32c3_wifi_adapter.c
EXTRA_LIBS += -lcore -lnet80211 -lpp -lsmartconfig -lcoexist -lespnow -lwpa_supplicant -lwapi -lmesh
endif

ifeq ($(CONFIG_ESP32C3_BLE),y)
CHIP_CSRCS += esp32c3_ble_adapter.c esp32c3_ble.c
EXTRA_LIBS +=  -lbtbb -lbtdm_app
endif
