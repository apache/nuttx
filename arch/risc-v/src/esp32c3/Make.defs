############################################################################
# arch/risc-v/src/esp32c3/Make.defs
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.  The
# ASF licenses this file to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance with the
# License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
# License for the specific language governing permissions and limitations
# under the License.
#
############################################################################

# Specify our HEAD assembly file.  This will be linked as
# the first object file, so it will appear at address 0

HEAD_ASRC  = esp32c3_head.S

CHIP_ASRCS  = esp32c3_vectors.S esp32c3_interrupt.S riscv_syscall.S

ifeq ($(CONFIG_ARCH_SETJMP_H),y)
CMN_ASRCS  += riscv_setjmp.S
endif

# Specify C code within the common directory to be included

CMN_CSRCS  += riscv_initialize.c riscv_swint.c
CMN_CSRCS  += riscv_allocateheap.c riscv_createstack.c riscv_exit.c riscv_exception.c
CMN_CSRCS  += riscv_assert.c riscv_blocktask.c riscv_copystate.c riscv_initialstate.c
CMN_CSRCS  += riscv_interruptcontext.c riscv_modifyreg32.c riscv_puts.c riscv_mdelay.c
CMN_CSRCS  += riscv_releasepending.c riscv_reprioritizertr.c riscv_copyfullstate.c
CMN_CSRCS  += riscv_releasestack.c riscv_stackframe.c riscv_schedulesigaction.c
CMN_CSRCS  += riscv_sigdeliver.c riscv_udelay.c riscv_unblocktask.c riscv_usestack.c

ifeq ($(CONFIG_STACK_COLORATION),y)
CMN_CSRCS += riscv_checkstack.c
endif

ifeq ($(CONFIG_ARCH_HAVE_VFORK),y)
CMN_CSRCS  += riscv_vfork.c
endif

# Specify our C code within this directory to be included

CHIP_CSRCS  = esp32c3_allocateheap.c esp32c3_start.c esp32c3_idle.c
CHIP_CSRCS += esp32c3_irq.c esp32c3_timerisr.c
CHIP_CSRCS += esp32c3_clockconfig.c esp32c3_gpio.c
CHIP_CSRCS += esp32c3_lowputc.c
CHIP_CSRCS += esp32c3_systemreset.c esp32c3_resetcause.c

ifeq ($(CONFIG_ESP32C3_UART),y)
CHIP_CSRCS += esp32c3_serial.c
endif

ifeq ($(CONFIG_ESP32C3_I2C),y)
CHIP_CSRCS += esp32c3_i2c.c
endif

ifeq ($(CONFIG_ESP32C3_SPIFLASH),y)
CHIP_CSRCS += esp32c3_spiflash.c
endif

ifeq ($(CONFIG_ESP32C3_PARTITION),y)
CHIP_CSRCS += esp32c3_partition.c
endif

ifeq ($(CONFIG_ESP32C3_WDT),y)
CHIP_CSRCS += esp32c3_wdt.c
ifeq ($(CONFIG_WATCHDOG),y)
CHIP_CSRCS += esp32c3_wdt_lowerhalf.c
endif
endif

ifeq ($(CONFIG_ESP32C3_TIMER),y)
CHIP_CSRCS += esp32c3_tim.c
ifeq ($(CONFIG_TIMER),y)
CHIP_CSRCS += esp32c3_tim_lowerhalf.c
endif
endif

ifeq ($(CONFIG_ESP32C3_RT_TIMER),y)
CHIP_CSRCS += esp32c3_rt_timer.c
endif

ifeq ($(CONFIG_ESP32C3_DISABLE_STDC_ATOMIC),)
CHIP_CSRCS += esp32c3_std_atomic.c
endif

ifeq ($(CONFIG_ESP32C3_WIRELESS),y)
WIRELESS_DRV_UNPACK  = esp-wireless-drivers-3rdparty
WIRELESS_DRV_ID      = 3cc7f67
WIRELESS_DRV_ZIP     = $(WIRELESS_DRV_ID).zip
WIRELESS_DRV_URL     = https://github.com/espressif/esp-wireless-drivers-3rdparty/archive

$(WIRELESS_DRV_ZIP):
	$(Q) echo "Downloading: ESP Wireless Drivers"
	$(Q) curl -L $(WIRELESS_DRV_URL)/$(WIRELESS_DRV_ZIP) -o chip/$(WIRELESS_DRV_ZIP)

chip/$(WIRELESS_DRV_UNPACK): $(WIRELESS_DRV_ZIP)
	$(Q) echo "Unpacking: ESP Wireless Drivers"
	$(Q) unzip -oqq chip/$(WIRELESS_DRV_ZIP) -d chip/
	$(Q) mv chip/$(WIRELESS_DRV_UNPACK)-$(WIRELESS_DRV_ID)* chip/$(WIRELESS_DRV_UNPACK)
	$(Q) touch chip/$(WIRELESS_DRV_UNPACK)

context:: chip/$(WIRELESS_DRV_UNPACK)

clean_context::
	$(call DELFILE, chip/$(WIRELESS_DRV_ZIP))
	$(call DELDIR, chip/$(WIRELESS_DRV_UNPACK))

INCLUDES += $(shell $(INCDIR) "$(CC)" $(ARCH_SRCDIR)$(DELIM)chip$(DELIM)esp-wireless-drivers-3rdparty$(DELIM)include)
INCLUDES += $(shell $(INCDIR) "$(CC)" $(ARCH_SRCDIR)$(DELIM)chip$(DELIM)esp-wireless-drivers-3rdparty$(DELIM)include$(DELIM)esp32c3)
CHIP_CSRCS += esp32c3_wlan.c esp32c3_wifi_adapter.c

EXTRA_LIBPATHS += -L $(ARCH_SRCDIR)$(DELIM)chip$(DELIM)esp-wireless-drivers-3rdparty$(DELIM)libs$(DELIM)esp32c3
EXTRA_LIBS += -lcore -lnet80211 -lpp -lsmartconfig -lcoexist -lespnow -lphy -lwpa_supplicant -lwapi

# Due to some Wi-Fi related libraries, the option is need to avoid linking too much
# unused functions.

LDFLAGS += --gc-sections
endif
