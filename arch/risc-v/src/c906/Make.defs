############################################################################
# arch/risc-v/src/c906/Make.defs
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.  The
# ASF licenses this file to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance with the
# License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
# License for the specific language governing permissions and limitations
# under the License.
#
############################################################################

# Specify our HEAD assembly file.  This will be linked as
# the first object file, so it will appear at address 0
HEAD_ASRC = c906_vectors.S

# Specify our general Assembly files
CHIP_ASRCS = c906_head.S

# Specify C code within the common directory to be included
CMN_CSRCS  += riscv_initialize.c riscv_swint.c
CMN_CSRCS  += riscv_createstack.c riscv_exit.c riscv_fault.c
CMN_CSRCS  += riscv_assert.c riscv_blocktask.c riscv_copystate.c riscv_initialstate.c
CMN_CSRCS  += riscv_interruptcontext.c riscv_modifyreg32.c riscv_puts.c
CMN_CSRCS  += riscv_releasepending.c riscv_reprioritizertr.c
CMN_CSRCS  += riscv_releasestack.c riscv_stackframe.c riscv_schedulesigaction.c
CMN_CSRCS  += riscv_sigdeliver.c riscv_unblocktask.c riscv_usestack.c
CMN_CSRCS  += riscv_mdelay.c riscv_copyfullstate.c

ifeq ($(CONFIG_STACK_COLORATION),y)
CMN_CSRCS += riscv_checkstack.c
endif

ifeq ($(CONFIG_ARCH_FPU),y)
CMN_ASRCS  += riscv_fpu.S
endif

ifeq ($(CONFIG_ARCH_HAVE_VFORK),y)
CMN_CSRCS  += riscv_vfork.c
endif

# Specify our C code within this directory to be included
CHIP_CSRCS  = c906_allocateheap.c c906_clockconfig.c
CHIP_CSRCS += c906_idle.c c906_irq.c c906_irq_dispatch.c
CHIP_CSRCS += c906_lowputc.c c906_serial.c
CHIP_CSRCS += c906_start.c c906_timerisr.c

ifeq ($(CONFIG_BUILD_PROTECTED),y)
CMN_CSRCS  += riscv_task_start.c riscv_pthread_start.c
CMN_CSRCS  += riscv_signal_dispatch.c
CMN_UASRCS += riscv_signal_handler.S

CHIP_CSRCS += c906_userspace.c
endif
