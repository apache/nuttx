############################################################################
# arch/risc-v/src/bl602/Make.defs
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.  The
# ASF licenses this file to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance with the
# License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
# License for the specific language governing permissions and limitations
# under the License.
#
############################################################################

# Specify our HEAD assembly file.  This will be linked as
# the first object file, so it will appear at address 0
HEAD_ASRC = bl602_vectors.S

# Specify our general Assembly files
CHIP_ASRCS = bl602_head.S riscv_syscall.S bl602_entry.S

# Specify C code within the common directory to be included
CMN_CSRCS  += riscv_initialize.c riscv_swint.c
CMN_CSRCS  += riscv_createstack.c riscv_exit.c
CMN_CSRCS  += riscv_assert.c riscv_blocktask.c riscv_copystate.c riscv_initialstate.c
CMN_CSRCS  += riscv_interruptcontext.c riscv_modifyreg32.c riscv_puts.c riscv_mdelay.c
CMN_CSRCS  += riscv_releasepending.c riscv_reprioritizertr.c
CMN_CSRCS  += riscv_releasestack.c riscv_stackframe.c riscv_schedulesigaction.c
CMN_CSRCS  += riscv_sigdeliver.c riscv_udelay.c riscv_unblocktask.c riscv_usestack.c

ifeq ($(CONFIG_STACK_COLORATION),y)
CMN_CSRCS += riscv_checkstack.c
endif

ifeq ($(CONFIG_ARCH_FPU),y)
CMN_ASRCS  += riscv_fpu.S
endif

ifeq ($(CONFIG_ARCH_HAVE_VFORK),y)
CMN_CSRCS  += riscv_vfork.c
endif

# Specify our C code within this directory to be included
CHIP_CSRCS  = bl602_allocateheap.c
CHIP_CSRCS += bl602_idle.c bl602_irq.c bl602_irq_dispatch.c
CHIP_CSRCS += bl602_serial.c bl602_lowputc.c bl602_tim.c
CHIP_CSRCS += bl602_start.c bl602_timerisr.c

ifeq ($(CONFIG_I2C),y)                                                                               
CHIP_CSRCS += bl602_i2c.c
endif

ifeq ($(CONFIG_TIMER),y)
CHIP_CSRCS  += bl602_tim_lowerhalf.c
endif
ifeq ($(CONFIG_ONESHOT),y)
CHIP_CSRCS  += bl602_oneshot_lowerhalf.c
endif
ifeq ($(CONFIG_WATCHDOG),y)
CHIP_CSRCS  += bl602_wdt_lowerhalf.c
endif
ifeq ($(CONFIG_PWM),y)
CHIP_CSRCS  += bl602_pwm_lowerhalf.c
endif
ifeq ($(CONFIG_BL602_SPIFLASH),y)
CHIP_CSRCS += bl602_flash.c bl602_spiflash.c
endif

CHIP_CSRCS += bl602_glb.c bl602_gpio.c bl602_hbn.c bl602_systemreset.c

# INCLUDES += ${shell $(INCDIR) "$(CC)" $(ARCH_SRCDIR)$(DELIM)chip$(DELIM)hardware}

